<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tdos.tdospractice.mapper.StudentAnswerMapper">

    <select  id="getStudentAnswerByCourseId" resultType="org.tdos.tdospractice.entity.StudentAnswerEntity">
        select sa.id, sa.question_id as questionId, sa.assignment_id as assignmentId, sa.user_id as userId,
        sa.answer, sa.score, sa.created_at as createdAt, sa.updated_at as updatedAt
        from student_answer sa
        inner join assignment a on a.id = sa.assignment_id::uuid
        inner join course_chapter_section ccs on ccs.section_id = a.section_id::uuid
        where ccs.course_id =#{courseId}::uuid;
    </select>

    <select  id="getStudentAnswerByChapterId" resultType="org.tdos.tdospractice.entity.StudentAnswerEntity">
        select sa.id, sa.question_id as questionId, sa.assignment_id as assignmentId, sa.user_id as userId,
        sa.answer, sa.score, sa.created_at as createdAt, sa.updated_at as updatedAt
        from student_answer sa
        inner join assignment a on a.id = sa.assignment_id::uuid
        inner join course_chapter_section ccs on ccs.section_id = a.section_id::uuid
        where ccs.chapter_id =#{chapterId}::uuid;
    </select>

    <select  id="getStudentAnswerBySectionId" resultType="org.tdos.tdospractice.entity.StudentAnswerEntity">
        select sa.id, sa.question_id as questionId, sa.assignment_id as assignmentId, sa.user_id as userId,
        sa.answer, sa.score, sa.created_at as createdAt, sa.updated_at as updatedAt
        from student_answer sa
        inner join assignment a on a.id = sa.assignment_id::uuid
        where a.section_id =#{sectionId}::uuid;
    </select>

    <delete id="deleteStudentAnswerById">
        delete from student_answer where id=#{id}::uuid;
    </delete>

    <select id="ifSectionStudentAnswerById"  resultType="Boolean">
        select ci.status = 0
        from student_answer sa
        inner join assignment a on a.id = sa.assignment_id ::uuid
        inner join course_chapter_section ccs on ccs.section_id = a.section_id::uuid
        inner join course ci on ci.id = ccs.course_id
        where sa.id =#{id}::uuid;
    </select>

    <update id="modifyStudentAnswerById">
        update student_answer set answer = #{answer}, score = #{score} where id=#{id}::uuid;
    </update>

    <insert id="addStudentAnswer" useGeneratedKeys="true" keyProperty="id">
        insert into student_answer (uestion_id, assignment_id, user_id, answer, score)
        values
        (#{questionId}, #{assignmentId}, #{userId}, #{answer}, #{score});
    </insert>

    <insert id="addStudentAnswerList" parameterType="java.util.List">
        insert into student_answer (question_id, assignment_id, user_id, answer, score)
        values
        <foreach collection="studentAnswerList" item="item" separator=",">
            (
            #{item.questionId},
            #{item.assignmentId},
            #{item.userId},
            #{item.answer},
            #{item.score}
            )
        </foreach>
    </insert>

</mapper>
