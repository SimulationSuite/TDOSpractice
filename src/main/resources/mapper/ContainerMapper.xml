<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tdos.tdospractice.mapper.ContainerMapper">

    <resultMap type="org.tdos.tdospractice.entity.ContainerEntity" id="ContainerMap">
        <id column="container_id" property="containerId"/>
        <result column="name" property="name"/>
        <result column="user_id" property="userId"/>
        <result column="course_id" property="courseId"/>
        <result column="experiment_id" property="experimentId"/>
        <result column="image_id" property="imageId"/>
        <result column="url" property="url"/>
        <result column="ports" property="ports"/>
        <result column="nodeOrder" property="nodeOrder"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <select id="findExperimentCount" resultType="java.util.HashMap">
        select * from experiment e right join (
        select c.experiment_id,count(*) from container c
        where c.status=1 group by c.experiment_id) as c on e.id=c.experiment_id
    </select>

    <select id="findContainerByClass" resultType="java.util.HashMap">
        SELECT
            t.user_id,
            s.NAME AS user_name,
            t.experiment_id,
            e.NAME AS experiment_name
        FROM
            (
        SELECT
            c.user_id,
            c.experiment_id
        FROM
            container c
        WHERE
            c.STATUS = 1
        GROUP BY
            c.user_id,
            c.experiment_id
            ) t
            LEFT JOIN sim_user s ON t.user_id = s.id
            LEFT JOIN class l ON s.class_id = l.id
            LEFT JOIN experiment e ON t.experiment_id = e.id
        WHERE
            s.role_id = 2
        <if test="classId != null and classId!=''">
            AND l.id = #{classId}::uuid
        </if>
    </select>

    <select id="findRunContainerByTeacher" resultType="java.util.HashMap">
        SELECT
            t.user_id,
            s.NAME AS user_name,
            t.experiment_id,
            e.NAME AS experiment_name
        FROM
            (
        SELECT
            c.user_id,
            c.experiment_id
        FROM
            container c
        WHERE
            c.STATUS = 1
        <choose>
            <when test="courseId != null and courseId!=''">
                AND c.course_id = #{courseId}::uuid
            </when>
            <otherwise>
                AND c.course_id IN ( SELECT o.id FROM course o WHERE o.owner_id = #{teacherId} )
            </otherwise>
        </choose>
        GROUP BY
            c.user_id,
            c.experiment_id
            ) t
            LEFT JOIN sim_user s ON t.user_id = s.id
            LEFT JOIN experiment e ON t.experiment_id = e.id
        <if test="filter != null and filter!=''">
            WHERE s.name like concat('%',#{filter},'%') or s.id like concat('%',#{filter},'%') or e.name like
            concat('%',#{filter},'%')
        </if>
    </select>

    <select id="findContainerByIds" resultMap="ContainerMap">
        select * from container c where c.container_id in
        <foreach collection="containerIds" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>

    <select id="findRunContainers" resultMap="ContainerMap">
        select * from container c where c.status=1 order by c.nodeOrder
    </select>

    <select id="findContainerByTeacher" resultType="java.util.HashMap">
        SELECT
            t.user_id,
            s.NAME AS user_name,
            t.experiment_id,
            e.NAME AS experiment_name
        FROM
            (
        SELECT
            c.user_id,
            c.experiment_id
        FROM
            container c
        WHERE
            c.STATUS = 1
        GROUP BY
            c.user_id,
            c.experiment_id
            ) t
            LEFT JOIN sim_user s ON t.user_id = s.id
            LEFT JOIN experiment e ON t.experiment_id = e.id
        WHERE
            s.role_id =1
    </select>

    <select id="findContainerAll" resultType="java.util.HashMap">
        SELECT
            t.user_id,
            s.NAME AS user_name,
            t.experiment_id,
            e.NAME AS experiment_name
        FROM
            (
        SELECT
            c.user_id,
            c.experiment_id
        FROM
            container c
        WHERE
            c.STATUS = 1
        GROUP BY
            c.user_id,
            c.experiment_id
            ) t
            LEFT JOIN sim_user s ON t.user_id = s.id
            LEFT JOIN experiment e ON t.experiment_id = e.id
    </select>

    <select id="findContainerByName" parameterType="java.lang.String" resultMap="ContainerMap">
        select * from container c where c.name=#{ContainerName}
    </select>

    <select id="findContainerById" parameterType="java.lang.String" resultMap="ContainerMap">
        select * from container c where c.container_id=#{containerId}
    </select>

    <select id="findContainerByCourseIds" resultMap="ContainerMap" parameterType="java.lang.String">
        select * from container c where c.course_id in
        <foreach collection="courseIds" open="(" separator="," close=")" item="item">
            #{item}::uuid
        </foreach>
    </select>

    <update id="updateContainerByIds">
        update container set status=#{status}
        where container_id in
        <foreach collection="containerIds" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </update>

    <insert id="insertContainer" parameterType="org.tdos.tdospractice.entity.ContainerEntity">
        insert into container (container_id,name,user_id,course_id,experiment_id,image_id,url,ports,nodeOrder,status)
        values (#{containerId},#{name},#{userId},#{courseId}::uuid,#{experimentId}::uuid,#{imageId}::uuid,#{url},#{ports},#{nodeOrder},#{status})
    </insert>

    <delete id="deleteByExperimentIds" parameterType="java.lang.String">
        delete from container c
        where c.experiment_id in
        <foreach collection="experimentIds" open="(" separator="," close=")" item="item">
            #{item}::uuid
        </foreach>
    </delete>

    <delete id="deleteByContainerIds">
        delete from container c
        where c.container_id in
        <foreach collection="containerIds" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </delete>

    <select id="findContainerByUserId" parameterType="java.util.List" resultMap="ContainerMap">
        select * from container c where c.user_id in
        <foreach collection="userIds" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>

    <select id="findContainerByExperimentidAndUserid" resultMap="ContainerMap">
        select * from container c where c.status=1 and c.user_id=#{userId} and c.experiment_id=#{experimentId}::uuid
    </select>

</mapper>
