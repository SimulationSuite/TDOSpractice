<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tdos.tdospractice.mapper.ContainerMapper">

    <resultMap type="org.tdos.tdospractice.entity.ContainerEntity" id="ContainerMap">
        <id column="container_id" property="containerId"/>
        <result column="name" property="name"/>
        <result column="user_id" property="userId"/>
        <result column="experiment_id" property="experimentId"/>
        <result column="image_id" property="imageId"/>
        <result column="ports" property="ports"/>
        <result column="nodeOrder" property="nodeOrder"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <select id="findExperimentCount" resultType="java.util.HashMap">
        select * from experiment e left join (
        select c.experiment_id,count(*) from container c
        where c.status=2 group by c.experiment_id) as c on e.id=c.experiment_id
    </select>

    <select id="findContainerByClass" resultType="java.util.HashMap">
        select c.*,s.name as user_name,e.name as experiment_name from container c
        left join sim_user s on c.user_id=s.id
        left join class l on s.class_id=l.id
        left join experiment e on c.experiment_id=e.id
        where s.role_id=1 and c.status=2
        <if test="classId != null and classId!=''">
            and l.id=#{classId}::uuid
        </if>
    </select>

    <select id="findRunContainerByTeacher" resultType="java.util.HashMap">
        select c.*,s.name as user_name,s.id,e.name as experiment_name,i.kind from container c
        left join sim_user s on c.user_id=s.id
        left join experiment e on c.experiment_id=e.id
        where c.status=2
        <if test="classId != null and classId!=''">
            and s.class_id=#{classId}::uuid
        </if>
        <if test="filter != null and filter!=''">
            and (s.name like concat('%',#{filter},'%') or s.id like concat('%',#{filter},'%') or e.name like
            concat('%',#{filter},'%'))
        </if>
    </select>

    <select id="findRunContainers" resultMap="ContainerMap">
        select * from container c where c.status=2 order by c.nodeOrder
    </select>

    <select id="findContainerByTeacher" resultType="java.util.HashMap">
        select c.*,s.name as user_name,e.name as experiment_name from container c
        left join sim_user s on c.user_id=s.id
        left join experiment e on c.experiment_id=e.id
        where s.role_id=1 and c.status=2 order by c.created_at
    </select>

    <select id="findContainerAll" resultType="java.util.HashMap">
        select c.*,s.name as user_name,e.name as experiment_name from container c
        left join sim_user s on c.user_id=s.id
        left join experiment e on c.experiment_id=e.id
        where c.status=2 order by c.created_at
    </select>

    <update id="updateContainerByIds">
        update container set status=#{status}
        where container_id in
        <foreach collection="containerIds" open="(" separator="," close=")" item="item">
            #{item}::uuid
        </foreach>
    </update>

    <insert id="insertContainer" parameterType="org.tdos.tdospractice.entity.ContainerEntity">
        insert into container (container_id,name,user_id,experiment_id,image_id,ports,nodeOrder,status)
        values (#{containerId},#{name},#{userId},#{experimentId},#{imageId},#{ports},#{nodeOrder},#{status})
    </insert>

    <delete id="deleteByExperimentIds" parameterType="java.lang.String">
        delete from container c
        where c.experiment_id in
        <foreach collection="experimentIds" open="(" separator="," close=")" item="item">
            #{item}::uuid
        </foreach>
    </delete>


</mapper>
