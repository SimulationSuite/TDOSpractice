<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tdos.tdospractice.mapper.CoursewareMapper">

    <select  id="getCoursewareByClassId" resultType="org.tdos.tdospractice.entity.CoursewareEntity">
        select c.id, c.name, c.kind, c.type, c.url, c.category_id as categoryId, c.created_at as createdAt, c.updated_at as updatedAt,
        ci.status = 0 as canUpdate
        from class_course cc
        inner join course_chapter_section ccs on ccs.course_id = cc.course_id ::uuid
        inner join section_courseware sc on sc.section_id ::uuid = ccs.section_id
        inner join courseware c on c.id = sc.courseware_id ::uuid
        inner join course ci on ci.id = ccs.course_id
        where cc.class_id =#{classId}
    </select>

    <select  id="getCoursewareBySectionId" resultType="org.tdos.tdospractice.entity.CoursewareEntity">
        select c.id, c.name, c.kind, c.type, c.url, c.category_id as categoryId, c.created_at as createdAt, c.updated_at as updatedAt,
        ci.status = 0 as canUpdate
        from course_chapter_section ccs
        inner join section_courseware sc on sc.section_id ::uuid = ccs.section_id
        inner join courseware c on c.id = sc.courseware_id ::uuid
        inner join course ci on ci.id = ccs.course_id
        where ccs.section_id =#{sectionId} ::uuid
    </select>

    <select  id="getCoursewareByChapterId" resultType="org.tdos.tdospractice.entity.CoursewareEntity">
        select c.id, c.name, c.kind, c.type, c.url, c.category_id as categoryId, c.created_at as createdAt, c.updated_at as updatedAt,
        ci.status = 0 as canUpdate
        from course_chapter_section ccs
        inner join section_courseware sc on sc.section_id ::uuid = ccs.section_id
        inner join courseware c on c.id = sc.courseware_id ::uuid
        inner join course ci on ci.id = ccs.course_id
        where ccs.chapter_id =#{chapterId} ::uuid
    </select>

    <select  id="getCoursewareByCourseId" resultType="org.tdos.tdospractice.entity.CoursewareEntity">
        select c.id, c.name, c.kind, c.type, c.url, c.category_id as categoryId, c.created_at as createdAt, c.updated_at as updatedAt,
        ci.status = 0 as canUpdate
        from course_chapter_section ccs
        inner join section_courseware sc on sc.section_id ::uuid = ccs.section_id
        inner join courseware c on c.id = sc.courseware_id ::uuid
        inner join course ci on ci.id = ccs.course_id ::uuid
        where sc.section_id =#{courseId}
    </select>

    <delete id="deleteCoursewareById">
        delete from courseware where id=#{id}::uuid;
    </delete>

    <update id="modifyCoursewareNameById">
        update courseware set name= #{coursewareName} where id=#{id}::uuid;
    </update>

    <insert id="addCourseware" useGeneratedKeys="true" keyProperty="id">
        insert into courseware (name, kind, type, url) values (#{name}, #{kind}, #{type}, #{url});
    </insert>

    <select id="ifSectionCourseware"  resultType="Boolean">
        select case when count(*) = 1 then true else false end
        from section_courseware sc
        where sc.courseware_id=#{id};
    </select>

    <select id="ifSectionCoursewarePub"  resultType="Boolean">
        select c.status = 0
        from section_courseware sc
        inner join course_chapter_section ccs on ccs.section_id = sc.section_id ::uuid
        inner join course c on c.id = ccs.course_id
        where sc.courseware_id=#{id};
    </select>

    <select id="hasSectionCoursewareId"  resultType="int">
        select count(*) from courseware where id=#{id}::uuid
    </select>

</mapper>
